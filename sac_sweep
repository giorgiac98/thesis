command:
  - ${env}
  - ${interpreter}
  - train.py
  - model=sac
  - data.params.method=sequential
  - train_iter=100
  - ${args_no_hyphens}
method: random
parameters:
  frames_per_batch:
    distribution: categorical
    values:
      - 9600
      - 8400
      - 7200
      - 6000
      - 4800
      - 3600
      - 2400
      - 1200
  num_envs:
    distribution: categorical
    values:
      - 2
      - 4
      - 8
      - 16
  model.policy_spec.num_qvalue_nets:
    distribution: categorical
    values:
      - 2
      - 3
      - 4
  model.actor_net_spec.num_cells:
    distribution: categorical
    values:
      - 8
      - 16
      - 32
      - 64
  model.value_net_spec.num_cells:
    distribution: categorical
    values:
      - 8
      - 16
      - 32
      - 64
  model.other_spec.init_random_frames:
    distribution: categorical
    values:
      - 8400
      - 6000
      - 3600
      - 2400
      - 1200
  model.other_spec.target_update_polyak:
    distribution: categorical
    values:
      - 0.005
      - 0.001
      - 0.01
  model.other_spec.alpha_lr:
    distribution: categorical
    values:
      - 3e-4
      - 8e-4
      - 3e-3
  update_rounds:
    distribution: categorical
    values:
      - 100
      - 90
      - 80
      - 70
      - 60
      - 50
      - 40
      - 30
      - 20
      - 10
  batch_size:
    distribution: categorical
    values:
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
  actor_lr:
    distribution: categorical
    values:
      - 0.01
      - 0.005
      - 0.0025
      - 0.001
      - 0.0005
  critic_lr:
    distribution: categorical
    values:
      - 0.01
      - 0.005
      - 0.0025
      - 0.001
      - 0.0005
  schedule_lr:
    distribution: categorical
    values:
      - "True"
      - "False"
  prb:
    distribution: categorical
    values:
      - "True"
      - "False"